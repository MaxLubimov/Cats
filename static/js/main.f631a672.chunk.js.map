{"version":3,"sources":["store.js","CatList.jsx","FavortieList.jsx","index.jsx"],"names":["initState","likedPosts","allPosts","liked","id","url","event","localStorage","setItem","store","dispatch","type","payload","likePost","target","classList","toggle","createStore","state","arguments","length","undefined","action","newSelecredIds","some","ids","removeItem","filter","concat","_objectSpread","addLikePost","data","window","__REDUX_DEVTOOLS_EXTENSION__","CatList","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","_this","this","props","Store","_jsx","className","children","map","style","backgroundImage","onClick","name","Component","connect","FavoriteList","FavoriteListId","item","App","useDispatch","_useState","useState","_useState2","_slicedToArray","fetching","setFetching","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","active","setActive","_useState7","_useState8","Selection","setSelection","useEffect","document","addEventListener","scrollHander","removeEventListener","i","getItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res1","response1","response2","res2","response","wrap","_context","prev","next","fetch","sent","json","innerHeight","_toConsumableArray","prevState","stop","fetchData","finally","console","log","e","documentElement","scrollHeight","scrollTop","toggleContent","currentState","preventDefault","_jsxs","_Fragment","autoFocus","switchContent","rootElement","querySelector","ReactDOM","render","Provider"],"mappings":"0PAiCMA,EAAY,CAChBC,WAAY,GACZC,SAAU,IA4CCC,EAAQ,SAACC,EAAIC,EAAKC,GAC7BC,aAAaC,QAAQJ,EAAIC,GACzBI,EAAMC,SA/ES,SAACN,EAAIC,GACpB,MAAO,CACLM,KAAM,cACNC,QAAS,CACPR,KACAC,QA0EWQ,CAAST,EAAIC,IAC5BC,EAAMQ,OAAOC,UAAUC,OAAO,UAC9BV,EAAMQ,OAAOC,UAAUC,OAAO,SAG1BP,EAAQQ,aAhDK,WAAgC,IAA/BC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGnB,EAAWsB,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOX,MACb,IAAK,cACH,IAAIY,EAYJ,OAXIL,EAAMjB,WAAWuB,MAAK,SAAAC,GAAG,OAAIA,EAAIrB,KAAOkB,EAAOV,QAAQR,OACzDG,aAAamB,WAAWJ,EAAOV,QAAQR,IACvCmB,EAAiBL,EAAMjB,WAAW0B,QAAO,SAAAF,GAAG,OAAIA,EAAIrB,KAAOkB,EAAOV,QAAQR,QAG1EG,aAAaC,QAAQc,EAAOV,QAAQR,GAAIkB,EAAOV,QAAQP,KACvDkB,EAAiBL,EAAMjB,WAAW2B,OAAO,CACvCxB,GAAIkB,EAAOV,QAAQR,GACnBC,IAAKiB,EAAOV,QAAQP,OAGxBwB,wBAAA,GACKX,GAAK,IACRjB,WAAYsB,IAEhB,IAAK,oBACH,IAAIO,EAAcZ,EAAMjB,WAAWuB,MAAK,SAAAC,GAAG,OAAIA,EAAIrB,KAAOkB,EAAOV,QAAQR,MACrEc,EAAMjB,WACNiB,EAAMjB,WAAW2B,OAAO,CACxBxB,GAAIkB,EAAOV,QAAQR,GACnBC,IAAKiB,EAAOV,QAAQP,MAExB,OAAAwB,wBAAA,GACKX,GAAK,IACRjB,WAAY6B,IAEhB,IAAK,WACH,OAAAD,wBAAA,GACKX,GAAK,IACRhB,SAAUgB,EAAMhB,SAAS0B,OAAON,EAAOV,QAAQmB,QAEnD,QACE,OAAOb,KAcXc,OAAOC,8BAAgCD,OAAOC,gCAGjCxB,I,OCtFTyB,EAAO,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAArB,WA0BV,OA1BUsB,YAAAP,EAAA,EAAAQ,IAAA,SAAAC,MACX,WAAU,IAADC,EAAA,KACDb,EAAOc,KAAKC,MAAMC,MAAM7C,SAC9B,OACE8C,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAAA,MAAIC,UAAU,YAAWC,SACtBnB,EAAKoB,KAAI,SAAApB,GAAI,OACZiB,cAAA,MACEC,UAAU,WAEVG,MAAO,CACLC,gBAAgB,QAADzB,OAAUG,EAAK1B,IAAG,OACjC6C,SAEFF,cAAA,SACEM,QAAS,SAAChD,GAAK,OAAKH,EAAM4B,EAAK3B,GAAI2B,EAAK1B,IAAKC,IAC7CK,KAAK,SACLsC,UAAS,eAAArB,OAAiBgB,EAAKE,MAAMC,MAAM9C,WAAWuB,MAAK,SAAAC,GAAG,OAAIA,EAAIrB,KAAO2B,EAAK3B,MAAM,OAAS,UACjGuC,MAAM,GACNY,KAAK,MAVFxB,EAAK3B,eAiBrB8B,EA1BU,CAASsB,aA6BPC,eACb,SAAAvC,GAAK,MAAK,CACR6B,MAAO7B,KAFIuC,CAIbvB,GChCIwB,EAAY,SAAAvB,GAAAC,YAAAsB,EAAAvB,GAAA,IAAAE,EAAAC,YAAAoB,GAAA,SAAAA,IAAA,OAAAnB,YAAA,KAAAmB,GAAArB,EAAAG,MAAA,KAAArB,WA6Bf,OA7BesB,YAAAiB,EAAA,EAAAhB,IAAA,SAAAC,MAChB,WACE,IAAMgB,EAAiBd,KAAKC,MAAMC,MAAM9C,WACxC,OAC4B,IAA1B0D,EAAevC,QAEb4B,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAAA,MAAIC,UAAU,YAAWC,SACtBS,EAAeR,KAAI,SAAAS,GAAI,OACtBZ,cAAA,MACEC,UAAU,WAEVG,MAAO,CACLC,gBAAgB,QAADzB,OAAUgC,EAAKvD,IAAG,OACjC6C,SAEFF,cAAA,SACEM,QAAS,SAACL,GAAS,OAAK9C,EAAMyD,EAAKxD,GAAIwD,EAAKvD,IAAK4C,IACjDtC,KAAK,SACLsC,UAAU,iBACVN,MAAM,GACNY,KAAK,MAVFK,EAAKxD,eAkBvBsD,EA7Be,CAASF,aAgCZC,eACb,SAAAvC,GAAK,MAAK,CACR6B,MAAO7B,KAFIuC,CAIbC,G,MClCF,SAASG,IACP,IAAMnD,EAAWoD,cAAcC,EACCC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EACUL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAAAG,EACNT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACUb,mBAAS,WAAUc,EAAAZ,YAAAW,EAAA,GAA9CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAG9BG,qBAAU,WAER,OADAC,SAASC,iBAAiB,SAAUC,GAC7B,WACLF,SAASG,oBAAoB,SAAUD,MAExC,IAEHH,qBAAU,WACR,IAAK,IAAIK,EAAI,EAAGA,EAAI/E,aAAaa,OAAQkE,IAAK,CAC5C,IAAI5C,EAAMnC,aAAamC,IAAI4C,GAC3B5E,GHbwBN,EGaDsC,EHbKrC,EGaAE,aAAagF,QAAQ7C,GHZ9C,CACL/B,KAAM,oBACNC,QAAS,CACPR,KACAC,UALuB,IAACD,EAAIC,KGkBhC4E,qBAAU,WACJd,GACa,eAAAqB,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,IAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,MAAM,4DAAD1E,OACwC2C,IAC5D,KAAD,EAFO,OAAJsB,EAAIM,EAAAI,KAAAJ,EAAAE,KAAA,EAGcR,EAAKW,OAAO,KAAD,EACf,GADdV,EAASK,EAAAI,KACTR,EAAY,KACZ/D,OAAOyE,YAAc,KAAG,CAAAN,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACTC,MAAM,4DAAD1E,OACwC2C,IAC5D,KAAD,GAFO,OAAJyB,EAAIG,EAAAI,KAAAJ,EAAAE,KAAA,GAGUL,EAAKQ,OAAO,KAAD,GAA7BT,EAASI,EAAAI,KAAA,QAEPN,EAAQ,GAAArE,OAAA8E,YAAOZ,GAASY,YAAKX,IACjCvB,GAAe,SAAAmC,GAAS,OAAIA,EAAY,KACxCjG,EHvBC,CACLC,KAAM,WACNC,QAAS,CACPmB,KGoBoBkE,KAAW,yBAAAE,EAAAS,UAAAhB,OAC9B,kBAfc,OAAAJ,EAAAhD,MAAA,KAAArB,YAAA,EAgBf0F,GAAYC,SAAQ,kBAAM1C,GAAY,QAEvC,CAACD,IAEJ4C,QAAQC,IAAIhF,OAAOyE,aAEnB,IAAMrB,EAAe,SAAC6B,GAChBA,EAAEnG,OAAOoG,gBAAgBC,cAAgBF,EAAEnG,OAAOoG,gBAAgBE,UAAYpF,OAAOyE,aAAe,KAAOrC,GAAY,IAIvHiD,EAAgB,SAAC/G,GACrB,IAAMgH,EAAe3C,EACrBrE,EAAMiH,iBACNvC,EAAa1E,EAAMQ,OAAO6B,OAC1BiC,GAAW0C,IAeb,OACEE,eAAAC,WAAA,CAAAvE,SAAA,CACEF,cAAA,UAAQC,UAAU,SAAQC,SACxBF,cAAA,OAAKC,UAAU,YAAWC,SACxBsE,eAAA,OAAKvE,UAAU,YAAWC,SAAA,CACxBF,cAAA,UAAQ0E,WAAS,EAACzE,UAAyB,YAAd8B,EAA0B,SAAW,KAAMpC,MAAM,UAAUW,QAAS+D,EAAcnE,SAAE,4DACjHF,cAAA,UAAQC,UAAyB,iBAAd8B,EAA+B,SAAW,KAAMpC,MAAM,eAAeW,QAAS+D,EAAcnE,SAAE,qFAjBrG,SAACP,GACrB,OAAQA,GACN,IAAK,UACH,OAAOK,cAACd,EAAO,IACjB,IAAK,eACH,OAAOc,cAACU,EAAY,IACtB,QACE,OAAO,MAcRiE,CAAc5C,MAKrB,IAAM6C,EAAc1C,SAAS2C,cAAc,SAC3CC,IAASC,OACP/E,cAACgF,IAAQ,CAACvH,MAAOA,EAAMyC,SACrBF,cAACa,EAAG,MAEN+D,K","file":"static/js/main.f631a672.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst likePost = (id, url) => {\r\n  return {\r\n    type: 'TOOGLE_LIKE',\r\n    payload: {\r\n      id,\r\n      url,\r\n    }\r\n  };\r\n};\r\n\r\n// добавляет данные иp localStorage о лайкнутых котах\r\nexport const addToLikePost = (id, url) => {\r\n  return {\r\n    type: 'ADD_TOO_LIKE_POST',\r\n    payload: {\r\n      id,\r\n      url,\r\n    }\r\n  };\r\n};\r\n\r\nexport const allPosts = (data) => {\r\n  return {\r\n    type: 'ALLPOSTS',\r\n    payload: {\r\n      data\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst initState = {\r\n  likedPosts: [],\r\n  allPosts: [],\r\n};\r\n\r\nconst likeRducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'TOOGLE_LIKE':\r\n      let newSelecredIds\r\n      if (state.likedPosts.some(ids => ids.id === action.payload.id)) {\r\n        localStorage.removeItem(action.payload.id)\r\n        newSelecredIds = state.likedPosts.filter(ids => ids.id !== action.payload.id)\r\n      }\r\n      else {\r\n        localStorage.setItem(action.payload.id, action.payload.url)\r\n        newSelecredIds = state.likedPosts.concat({\r\n          id: action.payload.id,\r\n          url: action.payload.url\r\n        })\r\n      }\r\n      return {\r\n        ...state,\r\n        likedPosts: newSelecredIds,\r\n      };\r\n    case 'ADD_TOO_LIKE_POST':\r\n      let addLikePost = state.likedPosts.some(ids => ids.id === action.payload.id)\r\n        ? state.likedPosts\r\n        : state.likedPosts.concat({\r\n          id: action.payload.id,\r\n          url: action.payload.url\r\n        })\r\n      return {\r\n        ...state,\r\n        likedPosts: addLikePost\r\n      };\r\n    case 'ALLPOSTS':\r\n      return {\r\n        ...state,\r\n        allPosts: state.allPosts.concat(action.payload.data)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// добавление/удаление поста из стор\r\nexport const liked = (id, url, event) => {\r\n  localStorage.setItem(id, url);\r\n  store.dispatch(likePost(id, url));\r\n  event.target.classList.toggle('unlike');\r\n  event.target.classList.toggle('like');\r\n};\r\n\r\nconst store = createStore(\r\n  likeRducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { liked } from './store'\r\n\r\n// рендер всех котиков\r\nclass CatList extends Component {\r\n  render() {\r\n    const data = this.props.Store.allPosts;\r\n    return (\r\n      <div className=\"container\">\r\n        <ul className=\"cat-cards\">\r\n          {data.map(data => (\r\n            <li\r\n              className=\"cat-card\"\r\n              key={data.id}\r\n              style={{\r\n                backgroundImage: `url(\"${data.url}\")`\r\n              }}\r\n            >\r\n              <input\r\n                onClick={(event) => liked(data.id, data.url, event)}\r\n                type=\"button\"\r\n                className={`heart-img + ${this.props.Store.likedPosts.some(ids => ids.id === data.id) ? 'like' : 'unlike'}`}\r\n                value=\"\"\r\n                name=\"\"\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    Store: state\r\n  })\r\n)(CatList)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { liked } from './store';\r\n\r\n\r\n// рендер лайкнутых котиков\r\nclass FavoriteList extends Component {\r\n  render() {\r\n    const FavoriteListId = this.props.Store.likedPosts;\r\n    return (\r\n      FavoriteListId.length !== 0\r\n        ?\r\n        <div className=\"container\">\r\n          <ul className=\"cat-cards\">\r\n            {FavoriteListId.map(item => (\r\n              <li\r\n                className=\"cat-card\"\r\n                key={item.id}\r\n                style={{\r\n                  backgroundImage: `url(\"${item.url}\")`\r\n                }}\r\n              >\r\n                <input\r\n                  onClick={(className) => liked(item.id, item.url, className)}\r\n                  type=\"button\"\r\n                  className=\"heart-img like\"\r\n                  value=\"\"\r\n                  name=\"\"\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        : false\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    Store: state\r\n  }),\r\n)(FavoriteList)\r\n","import React, { useState, useEffect } from 'react';\nimport { Provider, useDispatch } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport CatList from './CatList'\nimport FavoriteList from './FavortieList'\nimport store, { allPosts, addToLikePost } from './store'\nimport './index.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [fetching, setFetching] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [active, setActive] = useState(false);\n  const [Selection, setSelection] = useState('allCats');\n\n  // подписка на скролл\n  useEffect(() => {\n    document.addEventListener('scroll', scrollHander);\n    return function () {\n      document.removeEventListener('scroll', scrollHander);\n    };\n  }, []);\n\n  useEffect(() => {\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      dispatch(addToLikePost(key, localStorage.getItem(key)));\n    }\n  })\n\n  // загрузка данных + диспатч в стор\n  useEffect(() => {\n    if (fetching) {\n      const fetchData = async () => {\n        let res1 = await fetch(\n          `https://api.thecatapi.com/v1/images/search?limit=10&page=${currentPage}`\n        );\n        let response1 = await res1.json();\n        let response2 = []\n        if (window.innerHeight > 600) {\n          let res2 = await fetch(\n            `https://api.thecatapi.com/v1/images/search?limit=10&page=${currentPage}`\n          );\n          response2 = await res2.json();\n        }\n        let response = [...response1, ...response2]\n        setCurrentPage(prevState => prevState + 1);\n        dispatch(allPosts(response));\n      };\n      fetchData().finally(() => setFetching(false));\n    }\n  }, [fetching]);\n  ;\n  console.log(window.innerHeight)\n  // проверка конца страницы\n  const scrollHander = (e) => {\n    if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) { setFetching(true) };\n  };\n\n  //тоггл вкладки\n  const toggleContent = (event) => {\n    const currentState = active;\n    event.preventDefault();\n    setSelection(event.target.value);\n    setActive(!currentState);\n  };\n\n  // отображение нужной вкладки\n  const switchContent = (value) => {\n    switch (value) {\n      case 'allCats':\n        return <CatList />;\n      case 'favoriteCats':\n        return <FavoriteList />;\n      default:\n        return null;\n    };\n  };\n\n  return (\n    <>\n      <header className=\"header\" >\n        <div className=\"container\">\n          <div className=\"nav-items\">\n            <button autoFocus className={Selection === 'allCats' ? 'active' : null} value=\"allCats\" onClick={toggleContent} >Все котики</button>\n            <button className={Selection === 'favoriteCats' ? 'active' : null} value=\"favoriteCats\" onClick={toggleContent} >Любимые котки</button>\n          </div>\n        </div>\n      </header >\n      {switchContent(Selection)}\n    </>\n  );\n}\n\nconst rootElement = document.querySelector('#root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >,\n  rootElement);\n\n\n"],"sourceRoot":""}